dplyr::select(-ID)
# dependencias
## encontrar dependencias no instaladas
dependencias <- c('readr','dplyr','rstudioapi','magrittr','tidyverse','stringi','fitdistrplus', 'distrMod', 'actuar','stats4', 'MASS', 'survival', 'distrMod' )
dependencias_no_instaladas <- dependencias[!(dependencias %in% installed.packages()[,'Package'])]
# instalarlas
if(length(dependencias_no_instaladas)>0) install.packages(dependencias_no_instaladas)
#importar paquetes
library(dplyr)
library(readr)
library(rstudioapi)
library(magrittr)
library(tidyverse)
library(stringi)
library(fitdistrplus)
# codigo adaptado de https://community.rstudio.com/t/how-to-separate-multiple-choice-multiple-answers-questionnaire-data-that-google-forms-put-in-one-variable/31168
DF <- DF %>%
mutate(ID = 1:n()) %>%
mutate(`Tipo de juego de preferencia` = strsplit(`Tipo de juego de preferencia`, split = ";\\s?")) %>%
unnest() %>%
mutate(Value = 1) %>%
spread(`Tipo de juego de preferencia`, Value, fill = 0) %>%
dplyr::select(-ID)
# codigo adaptado de https://community.rstudio.com/t/how-to-separate-multiple-choice-multiple-answers-questionnaire-data-that-google-forms-put-in-one-variable/31168
DF <- DF %>%
mutate(ID = 1:n()) %>%
mutate(`Tipo de juego de preferencia` = strsplit(`Tipo de juego de preferencia`, split = ";\\s?")) %>%
unnest() %>%
mutate(Value = 1) %>%
spread(`Tipo de juego de preferencia`, Value, fill = 0) %>%
dplyr::select(-ID)
# codigo adaptado de https://community.rstudio.com/t/how-to-separate-multiple-choice-multiple-answers-questionnaire-data-that-google-forms-put-in-one-variable/31168
DF <- DF %>%
mutate(ID = 1:n()) %>%
mutate(`Tipo de juego de preferencia` = strsplit(`Tipo de juego de preferencia`, split = ";\\s?")) %>%
unnest() %>%
mutate(Value = 1) %>%
spread(`Tipo de juego de preferencia`, Value, fill = 0) %>%
dplyr::select(-ID)
# codigo adaptado de https://community.rstudio.com/t/how-to-separate-multiple-choice-multiple-answers-questionnaire-data-that-google-forms-put-in-one-variable/31168
DF <- DF %>%
mutate(ID = 1:n()) %>%
mutate(`Tipo de juego de preferencia` = strsplit(`Tipo de juego de preferencia`, split = ";\\s?")) %>%
unnest() %>%
mutate(Value = 1) %>%
spread(`Tipo de juego de preferencia`, Value, fill = 0) %>%
dplyr::select(-ID)
# codigo adaptado de https://community.rstudio.com/t/how-to-separate-multiple-choice-multiple-answers-questionnaire-data-that-google-forms-put-in-one-variable/31168
DF <- DF %>%
mutate(ID = 1:n()) %>%
mutate(`Tipo de juego de preferencia` = strsplit(`Tipo de juego de preferencia`, split = ";\\s?")) %>%
unnest() %>%
mutate(Value = 1) %>%
spread(`Tipo de juego de preferencia`, Value, fill = 0) %>%
dplyr::select(-ID)
# codigo adaptado de https://community.rstudio.com/t/how-to-separate-multiple-choice-multiple-answers-questionnaire-data-that-google-forms-put-in-one-variable/31168
DF <- DF %>%
mutate(ID = 1:n()) %>%
mutate(`Juegas más en móvil, PC o en Consola` = strsplit(`Juegas más en móvil, PC o en Consola`, split = ";\\s?")) %>%
unnest() %>%
mutate(Value = 1) %>%
spread(`Juegas más en móvil, PC o en Consola`, Value, fill = 0) %>%
dplyr::select(-ID)
# codigo adaptado de https://community.rstudio.com/t/how-to-separate-multiple-choice-multiple-answers-questionnaire-data-that-google-forms-put-in-one-variable/31168
DF <- DF %>%
mutate(ID = 1:n()) %>%
mutate(`Juegas más en móvil, PC o en Consola` = strsplit(`Juegas más en móvil, PC o en Consola`, split = ";\\s?")) %>%
unnest() %>%
mutate(Value = 1) %>%
spread(`Juegas más en móvil, PC o en Consola`, Value, fill = 0) %>%
dplyr::select(-ID)
#cargar el archivo csv
DF <- read_csv("Encuesta UTECxVideojuegos.csv"
, show_col_types = FALSE)
setwd("~/U2022_2/REstadistica/pro_2/proyectoII_stat")
# dependencias
## encontrar dependencias no instaladas
dependencias <- c('readr','dplyr','rstudioapi','magrittr','tidyverse','stringi','fitdistrplus', 'distrMod', 'actuar','stats4', 'MASS', 'survival', 'distrMod' )
dependencias_no_instaladas <- dependencias[!(dependencias %in% installed.packages()[,'Package'])]
# instalarlas
if(length(dependencias_no_instaladas)>0) install.packages(dependencias_no_instaladas)
#importar paquetes
library(dplyr)
library(readr)
library(rstudioapi)
library(magrittr)
library(tidyverse)
library(stringi)
library(fitdistrplus)
#Getting the path of your current open file
#current_path = rstudioapi::getActiveDocumentContext()$path
#setwd(dirname(current_path ))
#cargar el archivo csv
DF <- read_csv("Encuesta UTECxVideojuegos.csv"
, show_col_types = FALSE)
names(DF)
# codigo adaptado de https://community.rstudio.com/t/how-to-separate-multiple-choice-multiple-answers-questionnaire-data-that-google-forms-put-in-one-variable/31168
DF <- DF %>%
mutate(ID = 1:n()) %>%
mutate(`Tipo de juego de preferencia` = strsplit(`Tipo de juego de preferencia`, split = ";\\s?")) %>%
unnest() %>%
mutate(Value = 1) %>%
spread(`Tipo de juego de preferencia`, Value, fill = 0) %>%
dplyr::select(-ID)
# codigo adaptado de https://community.rstudio.com/t/how-to-separate-multiple-choice-multiple-answers-questionnaire-data-that-google-forms-put-in-one-variable/31168
DF <- DF %>%
mutate(ID = 1:n()) %>%
mutate(`Juegas más en móvil, PC o en Consola` = strsplit(`Juegas más en móvil, PC o en Consola`, split = ";\\s?")) %>%
unnest() %>%
mutate(Value = 1) %>%
spread(`Juegas más en móvil, PC o en Consola`, Value, fill = 0) %>%
dplyr::select(-ID)
DF$`Marca temporal` <- NULL
DF$`Nombre de usuario` <- NULL
DF$`Plataforma` <- NULL
DF$`Género al que pertenece` <- NULL
DF$`...28` <- NULL
DF$`...29` <- NULL
DF$`...30` <- NULL
DF$`...31` <- NULL
DF$`...32` <- NULL
DF$`...33` <- NULL
DF$`...34` <- NULL
DF$`...35` <- NULL
DF$`...36` <- NULL
DF %>% rename(Codigo = `Código de alumno`
, Sexo = `Sexo`
, Edad = `Edad`
, Carrera = `Carrera`
, Ciclo = `En que ciclo estas?`
, Creditos = Créditos
, Vive_solo = `¿Vive solo en su domicilio?`
, Ha_jugado = `¿Ha jugado algún videojuegos?`
, Gasto = `En el último año, cuanto ha gastado relacionado con los videojuegos`
, Costo = `Costo del último juego que adquiriste`
, Frecuencia = `Frecuencia con la que juegas en la semana`
, Estudio = `Durante la semana cuantas horas estudia`
, Amigos = `Juegas con amigos`
, Frecuencia_amigos = `Frecuencia con la que juegas en la semana con amigos`
, Promedio = `¿Cuánto fue su promedio el último ciclo? (Use '.' como decimal)`
, Afecta = `¿Cree que jugar videojuegos afecta su rendimiento académico?`
, Favorito = `Mi videojuego favorito seria:`
, Horas_juego = `¿Horas totales de juego?`
, Jugar_es_divertido = `Jugar a videojuegos es una actividad divertida`
, Continua = `Cuando inicio una partida en un videojuego me apetece continuar jugándolo`
, Bueno = `Creo que soy bueno jugando a videojuegos`
, Casual = `Juegos casuales (Tipo angry birds, farmville, etc )`
, Shooter = `Shooters (Videojuegos de disparos)`
, RPG = `Juegos de rol (RPG)`
, MOBA = `MOBA (Lol, Dota, etc)`
, Deportes_y_carreras = `Deportes y carreras`
, Sandbox = `Sandboxes (Mundos abiertos en los que se puede hacer los que quiera)`
, Simulacion = Simulación
, Movil = Móvil
) -> DF
DF <- DF[!duplicated(DF$Codigo),]
DF[grep("[^0-9.]",DF$Codigo),]
DF <- DF[-grep("[^0-9.]",DF$Codigo),] #Eliminamos la fila
table(DF$Sexo)
table(DF$Edad)
DF$Edad[DF$Edad == "5"] <- NA
table(DF$Carrera)
table(DF$Ciclo)
DF$Ciclo[DF$Ciclo == "3ro"] <- "3"
DF$Ciclo[DF$Ciclo == "2ro"] <- "2"
DF$Ciclo[DF$Ciclo == "2do"] <- "2"
DF$Ciclo[DF$Ciclo == "0"] <- NA
DF$Ciclo = as.numeric(DF$Ciclo)
table(DF$Creditos)
DF$Creditos[DF$Creditos == "6creditos"] <- "6"
DF$Creditos[DF$Creditos == "Na"] = NA
DF$Creditos[DF$Creditos == "95"] <- "9"
DF$Creditos[DF$Creditos == "83"] <- "8"
DF$Creditos[DF$Creditos == "0"] = NA
DF$Creditos = as.numeric(DF$Creditos)
table(DF$Vive_solo)
DF$Vive_solo = DF$Vive_solo == "Sí"
table(DF$Ha_jugado)
DF$Ha_jugado = DF$Ha_jugado == "Sí"
DF = DF[DF$Ha_jugado,]
DF$Gasto[grep("[^0-9.]",DF$Gasto)]
DF$Gasto[DF$Gasto == "-1"] <- NA
DF$Gasto[DF$Gasto == "~400"] <- "400"
DF$Gasto[DF$Gasto == "10 soles"] <- "10"
DF$Gasto[DF$Gasto == "O soles"] <- "0"
DF$Gasto[DF$Gasto == "No"] <- "0"
DF$Gasto[DF$Gasto == "Nada"] <- "0"
DF$Gasto[DF$Gasto == "Js"] <- NA
DF$Gasto[DF$Gasto == "00"] <- "0"
DF$Gasto <- as.numeric(DF$Gasto)
DF$Costo[grep("[^0-9.]",DF$Costo)]
DF$Costo[DF$Costo == "0 soles"] <- "0"
DF$Costo[DF$Costo == "00"] <- "0"
DF$Costo[DF$Costo == "No"] <- NA
DF$Costo[DF$Costo == "J"] <- NA
DF$Costo[DF$Costo == "Fortnite"] <- NA
DF$Costo[DF$Costo == "Nada"] <- "0"
DF$Costo[DF$Costo == "No gaste"] <- "0"
DF$Costo[DF$Costo == "Gratis"] <- "0"
DF$Costo[DF$Costo == "Ninguno"] <- "0"
DF$Costo[DF$Costo == "Need for speed"] <- NA
DF$Costo[DF$Costo == "God of War"] <- NA
DF$Costo[DF$Costo == "Star Wars The Skywalker saga"] <- NA
DF$Costo[DF$Costo == "Spiderman ps4"] <- NA
DF$Costo <- as.numeric(DF$Costo)
DF$Costo[DF$Costo > 400] = NA
DF$Frecuencia[grep("[^0-9.]",DF$Frecuencia)]
DF$Frecuencia[DF$Frecuencia == "2 veces"] <- NA
DF$Frecuencia[DF$Frecuencia == "2 veces a la semana"] <- NA
DF$Frecuencia[DF$Frecuencia == "1b hora"] <- "1"
DF$Frecuencia[DF$Frecuencia == "Nada"] <- 0
DF$Frecuencia[DF$Frecuencia == "14h"] <- "14"
DF$Frecuencia[DF$Frecuencia == "2 horas"] <- "2"
DF$Frecuencia[DF$Frecuencia == "2horas"] <- "2"
DF$Frecuencia[DF$Frecuencia == "5 horas"] <- "5"
DF$Frecuencia[DF$Frecuencia == "Jsj"] <- NA
DF$Frecuencia[DF$Frecuencia == "1:30"] <- "1.5"
DF$Frecuencia[DF$Frecuencia == "3 veces a la semana"] <- NA
DF$Frecuencia[DF$Frecuencia == "5/10"] <- NA
DF$Frecuencia <- as.numeric(DF$Frecuencia)
DF$Frecuencia[DF$Frecuencia>50] = NA
DF$Estudio[grep("[^0-9.]",DF$Estudio)]
DF$Estudio[DF$Estudio == "3 horas por día"] = "21"
DF$Estudio[DF$Estudio == "14h"] = "14"
DF$Estudio[DF$Estudio == "Depende la semana"] = NA
DF$Estudio[DF$Estudio == "No se"] = NA
DF$Estudio[DF$Estudio == "2h"] = "2"
DF$Estudio[DF$Estudio == "Ys"] = NA
DF$Estudio[DF$Estudio == "6 aprox"] = "6"
DF$Estudio = as.numeric(DF$Estudio)
table(DF$Amigos)
DF$Amigos = DF$Amigos == "Si"
DF$Frecuencia_amigos[grep("[^0-9.]",DF$Frecuencia_amigos)]
DF$Frecuencia_amigos[DF$Frecuencia_amigos == "00"] <- "0"
DF$Frecuencia_amigos[DF$Frecuencia_amigos == "No"] <- "0"
DF$Frecuencia_amigos[DF$Frecuencia_amigos == "2 días"] <- NA
DF$Frecuencia_amigos[DF$Frecuencia_amigos == "2veces"] <- NA
DF$Frecuencia_amigos[DF$Frecuencia_amigos == "Cada 2 días"] <- NA
DF$Frecuencia_amigos[DF$Frecuencia_amigos == "Lunes a viernes"] <- NA
DF$Frecuencia_amigos <- as.numeric(DF$Frecuencia_amigos)
DF$Promedio[grep("[^0-9.]",DF$Promedio)]
DF$Promedio[DF$Promedio == "-"] <- NA
DF$Promedio[DF$Promedio == "Cachimba"] <- NA
DF$Promedio[DF$Promedio == "Eso no se pregunta ....T-T"] <- NA
DF$Promedio[DF$Promedio == "Que se yo"] <- NA
DF$Promedio[DF$Promedio == "15,34"] <- "15.34"
DF$Promedio[DF$Promedio == "11,41"] <- "11.41"
DF$Promedio[DF$Promedio == "16,5"] <- "16.5"
DF$Promedio[DF$Promedio == "14,61"] <- "14.61"
DF$Promedio[DF$Promedio == "-1"] <- NA
DF$Promedio[DF$Promedio == "17,7"] <- "17.7"
table(DF$Promedio)
DF$Promedio <- as.numeric(DF$Promedio)
table(DF$Afecta)
DF$Favorito = tolower(DF$Favorito)
table(DF$Favorito)
DF$Favorito[grep("free",DF$Favorito)] = 'free fire'
DF$Favorito[grep("dota",DF$Favorito)] = 'dota'
DF$Favorito[grep("brawl",DF$Favorito)] = 'brawl stars'
DF$Favorito[grep("counter|conter|cs",DF$Favorito)] = 'counter strike'
DF$Favorito[grep("fif",DF$Favorito)] = 'fifa'
DF$Favorito[grep("dead",DF$Favorito)] = 'left 4 dead'
DF$Favorito[grep("genshin",DF$Favorito)] = 'genshin impact'
DF$Favorito[grep("lol",DF$Favorito)] = 'league of legends'
DF$Favorito[grep("cod",DF$Favorito)] = 'call of duty'
DF$Favorito[grep("for",DF$Favorito)] = 'fortnite'
DF$Favorito[grep("pokemon|pokémon",DF$Favorito)] = 'pokemon'
DF$Favorito[grep("plantas",DF$Favorito)] = 'plants vs zombies'
DF$Favorito[grep("valorant",DF$Favorito)] = 'valorant'
DF$Favorito[grep("destiny",DF$Favorito)] = 'destiny'
DF$Favorito[grep("hollow",DF$Favorito)] = 'hollow knight'
DF$Favorito[grep("ape",DF$Favorito)] = 'apex legends'
DF$Favorito[grep("smash",DF$Favorito)] = 'smash bros'
DF$Favorito[grep("assassin|assasins",DF$Favorito)] = 'assasins creed'
DF$Favorito[grep("spiderman",DF$Favorito)] = 'spiderman'
DF$Favorito[grep("age",DF$Favorito)] = 'age of empires'
DF$Favorito[grep("pes",DF$Favorito)] = 'age of empires'
DF$Favorito[DF$Favorito == 'good of ward'] = 'god of war'
DF$Favorito[grep("no tengo|ninguno|--|-1|carreras|jsjf|pugcito",DF$Favorito)] = NA
table(DF$Favorito)
DF$Horas_juego[grep("[^0-9.]",DF$Horas_juego)]
DF$Horas_juego[DF$Horas_juego == "--"] <- NA
DF$Horas_juego[DF$Horas_juego == "+200"] <- "200"
DF$Horas_juego[DF$Horas_juego == "2 meses"] <- NA
DF$Horas_juego[DF$Horas_juego == "Más de 200"] <- "200"
DF$Horas_juego[DF$Horas_juego == "Bastantes"] <- NA
DF$Horas_juego[DF$Horas_juego == "No recuerdo"] <- NA
DF$Horas_juego[DF$Horas_juego == "251 horas"] <- "251"
DF$Horas_juego[DF$Horas_juego == "72h"] <- "72"
DF$Horas_juego[DF$Horas_juego == "Zjd"] <- NA
DF$Horas_juego[DF$Horas_juego == "3h"] <- "3"
DF$Horas_juego[DF$Horas_juego == "5h"] <- "5"
DF$Horas_juego[DF$Horas_juego == "6 horas"] <- "6"
DF$Horas_juego[DF$Horas_juego == "2000+"] <- "2000"
DF$Horas_juego[DF$Horas_juego == "30 min"] <- "0.5"
DF$Horas_juego[DF$Horas_juego == "4 a la semana máximo"] <- '4'
table(DF$Horas_juego)
DF$Horas_juego <- as.numeric(DF$Horas_juego)
table(DF$Jugar_es_divertido)
table(DF$Jugar_es_divertido)
table(DF$Bueno)
DF$Arcade = DF$Arcade == 1
DF$Aventura = DF$Aventura == 1
DF$Deportes_y_carreras = DF$Deportes_y_carreras == 1
DF$Estrategia = DF$Estrategia == 1
DF$Casual = DF$Casual == 1
DF$RPG = DF$RPG == 1
DF$MOBA = DF$MOBA == 1
DF$Peleas = DF$Peleas == 1
DF$Plataformas = DF$Plataformas == 1
DF$Sandbox = DF$Sandbox == 1
DF$Shooter = DF$Shooter == 1
DF$Simulacion = DF$Simulacion == 1
DF$Consola = DF$Consola == 1
DF$Movil = DF$Movil == 1
DF$PC = DF$PC == 1
DF$Tablet = DF$Tablet == 1
print(table(sapply(DF,typeof)))
barplot( sort((table(DF$Sexo)/sum(!is.na(DF$Sexo)))*100,decreasing=T)
,cex.names = 0.6
,ylim = c(0,110)
,main = "Variable Sexo"
,axes = TRUE
,xlab = "Respuesta"
,ylab = "Porcentaje"
)
print(
DF %>%
group_by(Sexo) %>%
summarise_at(vars(Gasto), list(name = mean))
)
print(
DF %>%
group_by(Sexo) %>%
summarise_at(vars(Gasto), list(name = median))
)
hist(DF$Edad
,breaks = seq(10.5,35.5,1)
,main = "Edades"
, ylab = "Frecuencia"
, xlab = "Edad"
)
Edad_HorasPromedio = DF %>%
group_by(Edad) %>%
summarise(Mean = median(Horas_juego, na.rm = T))
medians_ages = data.frame("edades" = c(16,17,18,19,20,21,22,23,24,25,34),
"medianas" = pull(Edad_HorasPromedio[2],-1)[-12])
medians_ages = rbind(medians_ages,data.frame("medianas"=c(0,0,0,0,0,0,0,0),"edades"=c(26,27,28,29,30,31,32,33)))
medians_ages = medians_ages[order(medians_ages$edades),]
barplot(medians_ages$medianas
,names = medians_ages$edades
#,type = "l"
,cex.names = 0.6
,main = "Mediana de horas de juego vs edad"
,ylab = "Horas de Juego"
,xlab = "Edad"
)
Edad_HorasPromedio = DF %>%
group_by(Edad) %>%
summarise(Mean = mean(Horas_juego, na.rm = T))
medians_ages = data.frame("edades" = c(16,17,18,19,20,21,22,23,24,25,34),
"medianas" = pull(Edad_HorasPromedio[2],-1)[-12])
medians_ages = rbind(medians_ages,data.frame("medianas"=c(0,0,0,0,0,0,0,0),"edades"=c(26,27,28,29,30,31,32,33)))
medians_ages = medians_ages[order(medians_ages$edades),]
barplot(medians_ages$medianas
,names = medians_ages$edades
#,type = "l"
,cex.names = 0.6
,main = "Promedio de horas de juego vs edad"
,ylab = "Horas de Juego"
,xlab = "Edad"
)
plot(DF$Estudio,DF$Horas_juego
, ylab = 'Horas totales de juego'
, xlab = 'Horas semanales de estudio')
print(head(sort(table(DF$Favorito), decreasing = T),5))
DF$Afecta = factor(DF$Afecta,levels = c("No","Tal vez","Sí"))
barplot(100*table(DF$Afecta)/sum(!is.na(DF$Afecta))
, ylim = c(0,100)
)
plot(DF$Frecuencia,DF$Promedio
, ylab = "Promedio"
, xlab =  "Frecuencia de Juego")
Amigos_Frecuencia = DF %>%
group_by(Amigos) %>%
summarise(Mean = mean(Frecuencia, na.rm = T))
Amigos_Frecuencia$Amigos[Amigos_Frecuencia$Amigos] = "Sí"
Amigos_Frecuencia$Amigos[Amigos_Frecuencia$Amigos == "FALSE"] = "No"
Amigos_Frecuencia = Amigos_Frecuencia[order(Amigos_Frecuencia$Mean)]
barplot(rev(Amigos_Frecuencia$Mean),
names = rev(Amigos_Frecuencia$Amigos)
,cex.names = 1
,main = "Promedio de horas de juego vs Amigos"
)
preferidos = c(sum(DF$Arcade),sum(DF$Aventura),sum(DF$Deportes_y_carreras),sum(DF$Casual),sum(DF$RPG),sum(DF$MOBA),sum(DF$Peleas),sum(DF$Plataformas),sum(DF$Sandbox),sum(DF$Shooter),sum(DF$Simulacion),sum(DF$Estrategia))
preferidos_labels = c('Arcade','Aventura','Deportes/Carreras','Casual','RPGs','MOBA','Peleas','Plataformas','Sandbox','Shooter','Simulacion','Estrategia')
preferidos_df = data.frame("preferidos" = preferidos,
"nombres" = preferidos_labels)
preferidos_df =
preferidos_df %>% arrange(desc(preferidos))
barplot(preferidos_df$preferidos
, names.arg = preferidos_df$nombres
, las = 2
, cex.names = 0.6
, main = 'Frecuencias de Preferencia de Géneros'
)
preferidos = c(sum(DF$Consola),sum(DF$Movil),sum(DF$PC),sum(DF$Tablet))
preferidos_labels = c('Consola','Movil','PC','Tablet')
preferidos_df = data.frame("preferidos" = preferidos,
"nombres" = preferidos_labels)
preferidos_df =
preferidos_df %>% arrange(desc(preferidos))
barplot(preferidos_df$preferidos
, names.arg = preferidos_df$nombres
, las = 2
, cex.names = 0.6
, main = 'Frecuencias de Preferencia de Plataforma'
)
hist(DF$Costo,
main="Histograma de Precios de Compra Incluyendo Ceros",
ylab = "Densidad",
xlab = "Costo del ultimo videojuego comprado",
#breaks = 30,
prob = T
)
Costo_No_ceros = DF$Costo[DF$Costo != 0 & DF$Costo < 400 & !is.na(DF$Costo)]
hist(Costo_No_ceros,
main="Histograma de Precios de Compra",
ylab = "Densidad",
xlab = "Precios de Compra",
freq = TRUE,
breaks = seq(0,300,by=10),
xlim = c(0,300),
#ylim = c(0,30)
)
abline(v=c(50,200),
col="red",
lwd=3
)
text(x=c(0,110,215),y=c(20),c("Indie","AA", "AAA"))
Costos_Indie = Costo_No_ceros[Costo_No_ceros <= 50]
Costos_AA = Costo_No_ceros[Costo_No_ceros > 50 & Costo_No_ceros <= 200]
Costos_AAA = Costo_No_ceros[Costo_No_ceros > 200]
par(mfrow=c(1,3))
hist(Costos_Indie,
breaks=5,
main = "Indie"
)
max(Costos_AA)
min(Costos_AA)
hist(Costos_AA,
breaks=seq(50, 200, 30),
main = "AA"
)
hist(Costos_AAA,
breaks=5,
main = "AAA"
)
min(Costos_AA)
max(Costos_AA)
r <- 5
p <- 0.42
n <- 20 - r
pDB <- dnbinom(x = n, size = r, prob = p)
data.frame(x = 0:17, prob = dnbinom(x = 0:17, size = r, prob = p)) %>%
mutate(Failures = ifelse(x == n, n, "otro")) %>%
ggplot(aes(x = factor(x), y = prob, fill = Failures)) +
geom_col() +
geom_text(
aes(label = round(prob,3), y = prob + 0.01),
position = position_dodge(0.5),
size = 2.5,
vjust = 1
) +
labs(title = "Probabilidad cuando r es 5, Exito cuando x es 20 Intentos",
x = "Intentos fallidos cuando: (x - r)",
y = "Probabilidad de exito")
library(stats4)
library(MASS)
library(survival)
library(distrMod)
library(distrMod)
vector = DF$Creditos[!DF$Creditos ==0]
creditos = na.omit(vector)
pois.f<- fitdist(c(creditos), "pois")# Poisson
summary(pois.f)
credito_maximo = max(DF$Creditos,na.rm=TRUE)
x1 <- 1:credito_maximo
lambda_poisson <- 18.61692
plot(dpois(x1, lambda_poisson), type = "h", lwd = 2,
main = "Probabilidad Poisson",
ylab = "P(X = x)", xlab = "Creditos Academicos")
hist(creditos,prob=TRUE,main="Histograma de variable Creditos",ylab="Densidad",xlab="Creditos")
lines(density(creditos), col = 4, lwd = 2)
#Probabilidad de que una persona lleve mas de 16 creditos academicos
cpp = ppois(16, lambda = lambda_poisson, lower.tail = FALSE)
round(cpp,2)
vector3 = DF$Gasto[!DF$Gasto ==0]
maximo_gasto = max(DF$Gasto)
gastar = na.omit(vector3)
exp.f<- fitdist(c(gastar), "exp")# Exponencial
summary(exp.f)
lambda_expo <- 0.003150127
xx <- 1:maximo_gasto
plot(dexp(xx, lambda_expo), type = "h", lwd = 1,
main = "Probabilidad exponencial",
ylab = "P(X = x)", xlab = "Dinero Gastado")
hist(gastar,prob=TRUE,main="Histograma de variable Gasto",ylab="Densidad",xlab="Dinero Gastado")
curve(dexp(x, rate = 0.003150127), col = 2, lty = 2, lwd = 2, add = TRUE)
#Probabilidad de que una persona gaste igual o menos que 500 soles
messi <- pexp(500,rate = lambda_expo,lower.tail = TRUE)
round(messi,2)
